package serverProxy;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import com.google.gson.Gson;
import com.google.gson.JsonObject;

import shared.communication.GameModelJSON;

public class AuthProxy 
{
	private String authCookie;
	private String urlBase;
	
	public AuthProxy(String authCookie)
	{
		this.authCookie = authCookie;
		urlBase = "http://localhost:8081";
	}
	
	public GameModelJSON getGameModel(int modelNumber) 
	{
		String obj = (String) get("/game/model");
		JsonObject json = new Gson().fromJson(obj, JsonObject.class);
		System.out.println("Get Game Model: " + json.toString());
		return null;
	}
	
	private Object get(String urlPath)
	{
		URL url;
		try 
		{
			url = new URL(urlBase + urlPath);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			conn.setReadTimeout(10000);
			conn.setRequestMethod("GET");
			conn.setRequestProperty("Cookie", authCookie);
			conn.setDoInput(true);
			conn.setDoOutput(true);
			conn.connect();
			
			System.out.println(conn.getResponseCode());
			System.out.println(conn.getRequestProperties().toString());
			if (conn.getResponseCode() == HttpURLConnection.HTTP_OK)
			{
				BufferedReader br = new BufferedReader(new InputStreamReader(conn.getInputStream()));
				StringBuilder sb = new StringBuilder();
				String line;
				while((line = br.readLine()) != null)
				{
					sb.append(line + "\n");
				}
				br.close();
				return sb.toString();
			}
		} 
		catch (MalformedURLException e) 
		{
			e.printStackTrace();
		} 
		catch (ProtocolException e) 
		{
			e.printStackTrace();
		} 
		catch (IOException e) 
		{
			e.printStackTrace();
		}
		return null;
	}
}
